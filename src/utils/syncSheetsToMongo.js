import { GoogleSpreadsheet } from 'google-spreadsheet';
import { MongoClient, ServerApiVersion } from 'mongodb';
import { config } from 'dotenv';

config();

const {
  MONGO_HOST,
  MONGO_DB_NAME,
  MONGO_PARTICIPANTS_COLL,
  GOOGLE_SPREADSHEET_ID,
  GOOGLE_SERVICE_ACCOUNT_EMAIL,
  GOOGLE_PRIVATE_KEY,
} = process.env;

// url к локальной датабазе
const uri = `mongodb://${MONGO_HOST}`;

// создание клиента mongodb для подключения к датабазе
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  },
});

// Парсинг пользователя в нужной паре { key: prop } для mongodb
const parseUser = (user, result) => {
  const newDocument = {
    'Код купона': user['Код купона'],
    Покупатель: user['Покупатель'],
    Телефон: user['Телефон'],
    'Кол-во купонов у покупателя': user['Кол-во купонов у покупателя'],
    ГУИД: user['ГУИД'],
    'Номер купона для генератора случайных чисел': user['Номер купона для генератора случайных чисел'],
  };

  result.push(newDocument);
};

/**
 * Сначала обнуляем коллекцию, затем загружаем новую
 *
 * @param {Array} data Массив объектов
 */
const addUsersToTestDb = async (data) => {
  try {
    await client.connect();
    // console.log('You successfully connected to MongoDB!');

    const database = client.db(MONGO_DB_NAME);
    const announceCollection = database.collection(MONGO_PARTICIPANTS_COLL);

    await announceCollection.deleteMany();
    await announceCollection.insertMany(data);
  } finally {
    await client.close();
  }
};

/**
 * Подключаемся к гугл табличке по:
 * GOOGLE_SPREADSHEET_ID, GOOGLE_SERVICE_ACCOUNT_EMAIL, GOOGLE_PRIVATE_KEY
 * копируем все строки, делаем парсинг и обновляем базу данных
 */
const syncSheetsToMongo = async () => {
  // Initialize the sheet - doc ID is the long id in the sheets URL
  const doc = new GoogleSpreadsheet(GOOGLE_SPREADSHEET_ID);

  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: GOOGLE_SERVICE_ACCOUNT_EMAIL,
    private_key: GOOGLE_PRIVATE_KEY,
  });

  await doc.loadInfo(); // loads document properties and worksheets

  const firstSheet = doc.sheetsByIndex[0];
  const rows = await (firstSheet.getRows({ offset: 0 }));

  const arrayOfUsers = [];
  rows.forEach((row) => parseUser(row, arrayOfUsers));

  try {
    addUsersToTestDb(arrayOfUsers);
    console.log('Database successfully updated!');
  } catch (err) {
    console.log(err.message);
  }
};

export default syncSheetsToMongo;
