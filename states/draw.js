import { config } from 'dotenv';
import { Telegraf, Markup, session } from 'telegraf';
import numeralize from 'numeralize-ru';

import fillArrWithTickets from '../src/utils/common.js';
import {
  getTicketsFromDb,
  findUserInAnnounceDb,
  addUserToAnnounceDb,
  isUserAdmin,
  getAnnounceColl,
  deleteFromAnnounceColl,
} from '../src/utils/dbActions.js';
import { adminKeyboard, yesNoKeyboard } from '../src/utils/keyboards.js';

export default () => {
  config();

  const { BOT_TOKEN, FEEDBACK_LINK } = process.env;

  const bot = new Telegraf(BOT_TOKEN);
  bot.use(session());

  /**
   * –í —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç awaitingAnswer
   * –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ phoneNumber
   */
  bot.context.state = {
    awaitingAnswer: true,
    phoneNumber: '',
  };

  // –û–±—ä–µ–∫—Ç —Å —à–∞–±–ª–æ–Ω–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const messages = {
    greetingMessage: '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Ä–æ–∑—ã–≥—Ä—ã—à—É –∫–æ–º–ø–∞–Ω–∏–∏ –ü–ò–í–°–¢–û–ü!',
    requestPersonalDataMessage: '–ß—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –∫—É–ø–æ–Ω—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
  };

  bot.start((ctx) => {
    ctx.reply(messages.greetingMessage);

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞:
     * –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–æ–≤, —Ç–æ —É –Ω–µ–≥–æ –ø–æ—è–≤—è—Ç—Å—è –¥–æ–ø. –∫–Ω–æ–ø–∫–∏
     * –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –æ—Ç –±–æ—Ç–∞
     */
    setTimeout(() => {
      // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ –ø–æ userID (chatId –≤ telegram)
      isUserAdmin(ctx.update.message.from.id).then((match) => {
        const isUserInColl = match
          .find((item) => item.id === ctx.update.message.from.id);

        if (isUserInColl) {
          ctx.reply('–£ –≤–∞—Å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞. –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é', adminKeyboard());
        } else {
          // –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          ctx.reply(messages.requestPersonalDataMessage, {
            reply_markup: {
              keyboard: [
                [{
                  text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç',
                  request_contact: true,
                }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true,
            },
          });
        }
      });
    }, 2000);
  });

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞
   * –∏ –µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
   */
  bot.use((actionCtx, next) => {
    if (actionCtx.update.message && actionCtx.update.message.contact) {
      let { phoneNumber } = bot.context.state;
      phoneNumber = actionCtx.update.message.contact.phone_number;
      let parsedPhone = phoneNumber.slice(1); // –±–µ–∑ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã

      setTimeout(() => {
        // —Å –ü–ö –Ω–æ–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ '+7...'
        if (phoneNumber.startsWith('+')) {
          parsedPhone = phoneNumber.slice(2);
        }

        // —Å–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ –Ω–æ–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ '7...'
        actionCtx.replyWithMarkdownV2(
          `–ò—â–µ–º –∫—É–ø–æ–Ω—ã –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: *${Number(phoneNumber)}*`,
          Markup.removeKeyboard(),
        );
      }, 1500);

      // –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      setTimeout(() => {
        getTicketsFromDb(parsedPhone).then((res) => {
          if (res.length === 0) {
            actionCtx.reply('–ù–∞ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ –∫—É–ø–æ–Ω–æ–≤');

            setTimeout(() => {
              actionCtx.replyWithMarkdownV2('–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É–ø–æ–Ω—ã –Ω–∞ –¥—Ä—É–≥–æ–º –Ω–æ–º–µ—Ä–µ? */check*');
            }, 2000);

            /**
             * –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–Ω–æ–Ω—Å–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
             * –≤ –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–º—É –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–î–∞/–ù–µ—Ç"
             * —Å –≤–æ–ø—Ä–æ—Å–æ–º "–•–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?"
             */
            findUserInAnnounceDb(actionCtx.update.message.from.id)
              .then((match) => {
                const isUserInColl = match
                  .find((item) => item.id === actionCtx.update.message.from.id);

                if (!isUserInColl) {
                  setTimeout(() => actionCtx.reply(
                    '–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ü–ò–í–°–¢–û–ü?',
                    yesNoKeyboard(),
                  ), 4000);
                }
              });

            return;
          }

          const ticketsCount = Object.values(res[0])[4];
          const pluralizedTickets = numeralize.pluralize(ticketsCount, '–∫—É–ø–æ–Ω', '–∫—É–ø–æ–Ω–∞', '–∫—É–ø–æ–Ω–æ–≤');

          /**
           * —Ñ–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ —Å—Ç—Ä–æ–∫ —Å –∫—É–ø–æ–Ω–∞–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞:
           * –ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö –∫—É–ø–æ–Ω–æ–≤:
           * –ö–æ–¥ 1234567890, id –∫—É–ø–æ–Ω–∞: 0
           * –ö–æ–¥ 1234567890, id –∫—É–ø–æ–Ω–∞: 1
           */
          const tickets = ['*–ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö –∫—É–ø–æ–Ω–æ–≤:*'];
          fillArrWithTickets(res, tickets);

          const stringifiedTickets = tickets.join('\n');

          actionCtx.replyWithMarkdownV2(
            `–ù–∞ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ *${ticketsCount} ${pluralizedTickets}*\n\n${stringifiedTickets}`,
          );

          setTimeout(() => {
            actionCtx.reply('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É–ø–æ–Ω—ã –Ω–∞ –¥—Ä—É–≥–æ–º –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ –º–µ–Ω—é');
          }, 2000);

          /**
           * –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–Ω–æ–Ω—Å–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
           * –≤ –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–º—É –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–î–∞/–ù–µ—Ç"
           * —Å –≤–æ–ø—Ä–æ—Å–æ–º "–•–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?"
           */
          findUserInAnnounceDb(actionCtx.update.message.from.id)
            .then((match) => {
              const isUserInColl = match
                .find((item) => item.id === actionCtx.update.message.from.id);

              if (!isUserInColl) {
                setTimeout(() => actionCtx.reply(
                  '–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏?',
                  yesNoKeyboard(),
                ), 4000);
              }
            });
        });
      }, 3000);
    }

    next();
  });

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–∫–Ω–æ–ø–∫–∏:
   * –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –æ—Ç –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é
   * –±–æ—Ç —Ä–∞–∑–æ—à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –Ω–∞—Ö–æ–¥—è—â–∏–º—Å—è –≤ –∫–æ–ª–ª—Ü–µ–∫—Ü–∏–∏ MONGO_ANNOUNCE_COLL
   */
  bot.hears('–ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ ‚ñ∂Ô∏è', (ctx) => {
    ctx.reply(
      '–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é',
      {
        reply_markup: {
          force_reply: true,
          input_field_placeholder: '–°—Å—ã–ª–∫–∞',
        },
      },
    ).then(() => {
      if (bot.context.state.awaitingAnswer) {
        bot.url((urlCtx) => {
          getAnnounceColl().then((res) => res.forEach((item) => {
            bot.telegram.sendMessage(item.id, `–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å: ${urlCtx.message.text}`);
          }));

          urlCtx.reply('–î–µ–ª–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é', adminKeyboard());
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
          bot.context.state.awaitingAnswer = false;
        });
      }

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      bot.context.state.awaitingAnswer = true;
    });
  });

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–∫–Ω–æ–ø–∫–∏:
   * –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –æ—Ç –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏
   * –±–æ—Ç —Ä–∞–∑–æ—à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –Ω–∞—Ö–æ–¥—è—â–∏–º—Å—è –≤ –∫–æ–ª–ª—Ü–µ–∫—Ü–∏–∏ MONGO_ANNOUNCE_COLL
   */
  bot.hears('–°–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π üéü', (ctx) => {
    ctx.reply(
      '–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏',
      {
        reply_markup: {
          force_reply: true,
          input_field_placeholder: '–°—Å—ã–ª–∫–∞',
        },
      },
    ).then(() => {
      if (bot.context.state.awaitingAnswer) {
        bot.url((urlCtx) => {
          getAnnounceColl().then((res) => res.forEach((item) => {
            bot.telegram.sendMessage(
              item.id,
              `–ù–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É, –∏ –º—ã —Ä–∞–¥—ã –æ–±—ä—è–≤–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π. –£–∑–Ω–∞—Ç—å, –∫—Ç–æ –ø–æ–ª—É—á–∏–ª —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã, –º–æ–∂–µ—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: ${urlCtx.message.text}`,
            );
          }));

          urlCtx.reply('–î–µ–ª–∞—é —Ä–∞—Å—Å—ã–ª–∫—É —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏', adminKeyboard());
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
          bot.context.state.awaitingAnswer = false;
        });
      }

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      bot.context.state.awaitingAnswer = true;
    });
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ "–î–∞/–ù–µ—Ç" –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
  bot.action(['yes', 'no'], (ctx) => {
    if (ctx.callbackQuery.data === 'yes') {
      ctx.answerCbQuery('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      addUserToAnnounceDb(ctx.callbackQuery.from);
    }

    if (ctx.callbackQuery.data === 'no') {
      ctx.answerCbQuery('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    }

    ctx.deleteMessage();
  });

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /check (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É–ø–æ–Ω—ã –Ω–∞ –¥—Ä—É–≥–æ–º –Ω–æ–º–µ—Ä–µ)
   * –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∏–¥–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞ "71234567890"
   */
  bot.command('check', (ctx) => {
    ctx.replyWithHTML(
      '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>71234567890</b>',
      {
        reply_markup: {
          force_reply: true,
          input_field_placeholder: '–í–∞—à –Ω–æ–º–µ—Ä',
        },
      },
    );

    bot.on('message', async (textCtx) => {
      if (bot.context.state.awaitingAnswer) {
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const answer = textCtx.update.message.text;

        let parsedPhone;

        if (answer.startsWith('+')) {
          parsedPhone = answer.slice(2);
        }
        if (answer.startsWith('7') || answer.startsWith('8')) {
          parsedPhone = answer.slice(1);
        }

        getTicketsFromDb(parsedPhone).then((res) => {
          const phoneNumberRegex = /^(\+7|7|8)\d{10}$/;

          // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
          if (!phoneNumberRegex.test(answer)) {
            textCtx.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
            bot.context.state.awaitingAnswer = false;

            return;
          }

          // —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
          if (phoneNumberRegex.test(answer) && res.length === 0) {
            textCtx.reply('–ö—É–ø–æ–Ω–æ–≤ –ø–æ –¥–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            bot.context.state.awaitingAnswer = false;

            return;
          }

          const ticketsCount = Object.values(res[0])[4];
          const pluralizedTickets = numeralize.pluralize(ticketsCount, '–∫—É–ø–æ–Ω', '–∫—É–ø–æ–Ω–∞', '–∫—É–ø–æ–Ω–æ–≤');

          /**
           * —Ñ–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ —Å—Ç—Ä–æ–∫ —Å –∫—É–ø–æ–Ω–∞–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞:
           * –ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö –∫—É–ø–æ–Ω–æ–≤:
           * –ö–æ–¥ 1234567890, id –∫—É–ø–æ–Ω–∞: 0
           * –ö–æ–¥ 1234567890, id –∫—É–ø–æ–Ω–∞: 1
           */
          const tickets = ['*–ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö –∫—É–ø–æ–Ω–æ–≤:*'];
          fillArrWithTickets(res, tickets);

          const stringifiedTickets = tickets.join('\n');

          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
          bot.context.state.awaitingAnswer = false;

          textCtx.replyWithMarkdownV2(
            `–ù–∞ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ *${ticketsCount} ${pluralizedTickets}*\n\n${stringifiedTickets}`,
          );
        });
      }
    });

    bot.context.state.awaitingAnswer = true;
  });

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help (–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É)
   * –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥—É–≥–ª-—Ñ–æ—Ä–º—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
   */
  bot.command('help', (ctx) => {
    ctx.reply(`–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã: ${FEEDBACK_LINK}`, { disable_web_page_preview: true });
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subscribe (–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
  bot.command('subscribe', (ctx) => {
    // –±–æ—Ç –∏—â–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ userId –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MONGO_ANNOUNCE_COLL
    findUserInAnnounceDb(ctx.update.message.from.id).then((res) => {
      if (res.length !== 0) {
        ctx.reply('–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      } else {
        addUserToAnnounceDb(ctx.update.message.from);
        ctx.reply('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      }
    });
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unsubscribe (–æ—Ç–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
  bot.command('unsubscribe', (ctx) => {
    // –±–æ—Ç –∏—â–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ userId –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MONGO_ANNOUNCE_COLL
    findUserInAnnounceDb(ctx.update.message.from.id).then((res) => {
      if (res.length === 0) {
        ctx.reply('–í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      } else {
        deleteFromAnnounceColl(ctx.update.message.from.id);
        ctx.reply('–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
      }
    });
  });

  bot.launch();
};
